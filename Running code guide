The datasets are spilt into two parts, Synthetic datasets and Practical datasets. Specifically, the datasets used in Tishby's paper is in Practical datasets with name ‘Var_u’ because of the way saving the dataset.
Synthetic datasets:
1	Cascade structure: This file includes the code of training cascade structure and calculating mutual information with three methods. 
1)	File ‘data saving’ contains all the datasets generated by the network as introduced in paper. The datasets named as ‘[10,7,5,3]_experment_17,28,44,48’ are used in paper because of the complexity and balance between positive and negative.  
2)	File ‘training_and _3_method_information.py’ is the code for training and calculate the mutual information. The way of applying it to different datasets are explained as comments in this file.
3)	File ‘cascade_plotinformationforfinalandcas.py’ is the code for drawing training performance and information dynamic. The way of applying it to different datasets are explained as comments in this file.
4)	File ‘Generator.py’ is the code of generating datasets saved in file ‘data saving’. If you are going to generate the datasets by yourself, please change the name of saving it in code in case overlapping the datasets used in paper.
5)	File ‘information_methods_comparision.py’ is the code for drawing the comparison between different estimators.
6)	File ‘10_fold_train_cascade_network.py’ is the code for 10_fold validation of cascade learning.
7)	Files ‘kde.py’, ‘plot.py’ and ‘Cascade_calculate_loaded_data_information1.py’ contain the functions used in above codes, the detailed comments can be checked inside them.
2	End to end structure: This file includes the code of training end to end structure and calculating mutual information with three methods.
1)	File ‘data saving’ contains all the datasets generated by the network as introduced in paper. The datasets named as ‘[10,7,5,3]_experment_17,28,44,48’ are used in paper because of the complexity and balance between positive and negative.  
2)	File ‘fully_3_methods_information.py’ is the code for training and calculate the mutual information. The way of applying it to different datasets are explained as comments in this file.
3)	File ‘fully_plotinfrmation.py’ is the code for drawing training performance and information dynamic. The way of applying it to different datasets are explained as comments in this file.
4)	File ‘10_fold_fully_connnect.py’ is the code for 10_fold validation of end to end network.
5)	Files ‘kde.py’, ‘plot.py’ and ‘calculate_loaded_data_information.py’ contain the functions used in above codes, the detailed comments can be checked inside them.

Practical datasets:  except the datasets used are different, the remaining parts are same as Synthetic datasets, and the detailed comments can be checked inside them.
PS: The detailed comments of calculating mutual information is shown in file’ Synthetic datasets > Cascade structure’ 
